# Configuration file for RelationshipGeneratorPluginIntegrationTest
# This is the configuration used for the functionality test, with "real" (generated) data in the database

enabled = 1
process_on_insert = 1
process_on_update = 1
add_matched = 1
remove_unmatched = 1
default_field_combination_operator = and
default_value_combination_operator = or
default_match_type = regex
default_match_options = {
	case_insensitive = 1
}
notify = 0
rules = {
	0 = {
		source_tables = [ ca_objects ],
		triggers = {
			%%element1%% = {
				match_type = exact,
				value = EXACT MATCH
			}
		},
		related_table = ca_collections,
		related_record = %%collection1%%,
		relationship_type = part
	},
	1 = {
		source_tables = [ ca_objects ],
		triggers = {
			%%element1%% = {
				match_type = regex,
				regexes = { "^\d+$" }
			}
		},
		related_table = ca_collections,
		related_record = %%collection2%%,
		relationship_type = part
	},
	2 = {
		source_tables = [ ca_objects ],
		triggers = {
			%%element2%% = {
				match_type = case insensitive,
				value = XYZZY
			}
		},
		related_table = ca_collections,
		related_record = %%collection3%%,
		relationship_type = part
	},
	3 = {
		source_tables = [ ca_objects ],
		triggers = {
			%%element3%% = {
				regexes = { "bar" }
			}
		},
		related_table = ca_collections,
		related_record = %%collection4%%,
		relationship_type = part
	},
	4 = {
		source_tables = [ ca_objects ],
		triggers = {
			%%element1%% = {
				match_type = case insensitive,
				value = COLLECTION DOES NOT EXIST SHOULD NOT GIVE ERROR
			}
		},
		related_table = ca_collections,
		related_record = %%collectionDoesNotExist%%,
		relationship_type = part
	}
}
